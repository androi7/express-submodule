{"ast":null,"code":"import AbortController from 'abort-controller';\nconst BACKEND_URL = 'http://localhost:4000';\nexport const controller = new AbortController();\nconst signal = controller.signal;\nexport function fetchJson(path) {\n  const url = \"\".concat(BACKEND_URL).concat(path);\n  return fetch(url, {\n    signal\n  }).then(response => {\n    return response.json();\n  }).catch(ex => console.log('parsing failed', ex));\n}\nexport function sendJson(method, path, payload) {\n  const url = \"\".concat(BACKEND_URL).concat(path);\n  return fetch(url, {\n    method: method,\n    headers: {\n      'Accept': 'application/json',\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(payload),\n    signal\n  }).then(response => {\n    return response.json();\n  }).catch(ex => console.log('parsing failed', ex));\n}","map":{"version":3,"sources":["C:\\Users\\gaeby\\Desktop\\Robotik\\Tutorials\\React\\testfield-vote-example\\express-ssr\\vote-ssr-react\\src\\backend\\Backend.js"],"names":["AbortController","BACKEND_URL","controller","signal","fetchJson","path","url","fetch","then","response","json","catch","ex","console","log","sendJson","method","payload","headers","body","JSON","stringify"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,kBAA5B;AACA,MAAMC,WAAW,GAAG,uBAApB;AAEA,OAAO,MAAMC,UAAU,GAAG,IAAIF,eAAJ,EAAnB;AACP,MAAMG,MAAM,GAAGD,UAAU,CAACC,MAA1B;AAEA,OAAO,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AAC5B,QAAMC,GAAG,aAAML,WAAN,SAAoBI,IAApB,CAAT;AAEA,SAAOE,KAAK,CAACD,GAAD,EAAM;AAACH,IAAAA;AAAD,GAAN,CAAL,CACFK,IADE,CACGC,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAHE,EAIFC,KAJE,CAIIC,EAAE,IAAIC,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,EAA9B,CAJV,CAAP;AAKH;AAED,OAAO,SAASG,QAAT,CAAkBC,MAAlB,EAA0BX,IAA1B,EAAgCY,OAAhC,EAAyC;AAC5C,QAAMX,GAAG,aAAML,WAAN,SAAoBI,IAApB,CAAT;AAEA,SAAOE,KAAK,CAACD,GAAD,EAAM;AACdU,IAAAA,MAAM,EAAEA,MADM;AAEdE,IAAAA,OAAO,EAAE;AACL,gBAAU,kBADL;AAEL,sBAAgB;AAFX,KAFK;AAMdC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,OAAf,CANQ;AAOdd,IAAAA;AAPc,GAAN,CAAL,CAQJK,IARI,CAQCC,QAAQ,IAAI;AAChB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAVM,EAUJC,KAVI,CAUEC,EAAE,IAAIC,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,EAA9B,CAVR,CAAP;AAWH","sourcesContent":["import AbortController from 'abort-controller';\r\nconst BACKEND_URL = 'http://localhost:4000';\r\n\r\nexport const controller = new AbortController();\r\nconst signal = controller.signal;\r\n\r\nexport function fetchJson(path) {\r\n    const url = `${BACKEND_URL}${path}`;\r\n\r\n    return fetch(url, {signal})\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(ex => console.log('parsing failed', ex));\r\n}\r\n\r\nexport function sendJson(method, path, payload) {\r\n    const url = `${BACKEND_URL}${path}`;\r\n\r\n    return fetch(url, {\r\n        method: method,\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(payload),\r\n        signal\r\n    }).then(response => {\r\n        return response.json();\r\n    }).catch(ex => console.log('parsing failed', ex));\r\n}"]},"metadata":{},"sourceType":"module"}