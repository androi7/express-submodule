{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaeby\\\\Desktop\\\\Robotik\\\\Tutorials\\\\React\\\\testfield-vote-example\\\\express-ssr\\\\vote-ssr-react\\\\src\\\\components\\\\VoteController.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport VoteList from './VoteList';\nimport VoteComposer from './VoteComposer';\nimport { fetchJson } from '../backend/Backend';\nexport default class VoteController extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      allVotes: []\n    };\n    this.activateVoteComposer = this.activateVoteComposer.bind(this);\n  }\n\n  componentDidMount() {\n    document.title = 'Overview - Vote as a Service';\n    fetchJson('/api/votes').then(allVotes => {\n      this.setState({\n        allVotes\n      });\n    });\n  }\n\n  transitionTo(path) {\n    //this.context.history.pushState(null, path);\n    this.props.history.push(path);\n  }\n\n  activateVoteComposer() {\n    this.transitionTo('/compose');\n  }\n\n  render() {\n    const allVotes = this.state.allVotes;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(VoteList, {\n      allVotes: allVotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(VoteComposer, {\n      active: false,\n      onActivate: this.activateVoteComposer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }));\n  }\n\n}\n/*\r\nVoteController.contextTypes = {\r\n    history: PropTypes.object.isRequired\r\n};\r\n*/","map":{"version":3,"sources":["C:\\Users\\gaeby\\Desktop\\Robotik\\Tutorials\\React\\testfield-vote-example\\express-ssr\\vote-ssr-react\\src\\components\\VoteController.js"],"names":["React","PropTypes","VoteList","VoteComposer","fetchJson","VoteController","Component","constructor","state","allVotes","activateVoteComposer","bind","componentDidMount","document","title","then","setState","transitionTo","path","props","history","push","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAAQC,SAAR,QAAwB,oBAAxB;AAIA,eAAe,MAAMC,cAAN,SAA6BL,KAAK,CAACM,SAAnC,CAA6C;AACxDC,EAAAA,WAAW,GAAG;AACV;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAIA,SAAKC,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BC,IAA1B,CAA+B,IAA/B,CAA5B;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,QAAQ,CAACC,KAAT,GAAiB,8BAAjB;AACAV,IAAAA,SAAS,CAAC,YAAD,CAAT,CAAwBW,IAAxB,CAA6BN,QAAQ,IAAI;AACrC,WAAKO,QAAL,CAAc;AACVP,QAAAA;AADU,OAAd;AAGH,KAJD;AAKH;;AAEDQ,EAAAA,YAAY,CAACC,IAAD,EAAO;AACf;AACA,SAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwBH,IAAxB;AACH;;AAEDR,EAAAA,oBAAoB,GAAG;AACnB,SAAKO,YAAL,CAAkB,UAAlB;AACH;;AAEDK,EAAAA,MAAM,GAAG;AAAA,UACGb,QADH,GACgB,KAAKD,KADrB,CACGC,QADH;AAGL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAEA,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,YAAD;AAAc,MAAA,MAAM,EAAE,KAAtB;AACc,MAAA,UAAU,EAAE,KAAKC,oBAD/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAOH;;AAvCuD;AA0C5D","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport VoteList from './VoteList';\r\nimport VoteComposer from './VoteComposer';\r\nimport {fetchJson} from '../backend/Backend';\r\n\r\n\r\n\r\nexport default class VoteController extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            allVotes: []\r\n        };\r\n\r\n        this.activateVoteComposer = this.activateVoteComposer.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = 'Overview - Vote as a Service';\r\n        fetchJson('/api/votes').then(allVotes => {\r\n            this.setState({\r\n                allVotes\r\n            });\r\n        });\r\n    }\r\n\r\n    transitionTo(path) {\r\n        //this.context.history.pushState(null, path);\r\n        this.props.history.push(path);\r\n    }\r\n\r\n    activateVoteComposer() {\r\n        this.transitionTo('/compose');\r\n    }\r\n\r\n    render() {\r\n        const { allVotes } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <VoteList allVotes={allVotes} />\r\n                <VoteComposer active={false}\r\n                              onActivate={this.activateVoteComposer} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n/*\r\nVoteController.contextTypes = {\r\n    history: PropTypes.object.isRequired\r\n};\r\n*/"]},"metadata":{},"sourceType":"module"}