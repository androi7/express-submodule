{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaeby\\\\Desktop\\\\Robotik\\\\Tutorials\\\\React\\\\testfield-vote-example\\\\express-ssr\\\\vote-ssr-react\\\\src\\\\components\\\\VoteComposerController.js\";\nimport React from 'react';\nimport VoteComposer from './VoteComposer';\nimport { sendJson } from '../backend/Backend';\nimport PropTypes from 'prop-types';\nexport default class VoteComposerController extends React.Component {\n  constructor() {\n    super();\n    this.routeToMain = this.routeToMain.bind(this);\n    this.addVote = this.addVote.bind(this);\n  }\n\n  componentDidMount() {\n    document.title = 'Compose - Vote as a Service';\n  }\n\n  addVote(newVote) {\n    sendJson('post', \"/api/votes/\".concat(newVote), newVote).then(() => this.routeToMain());\n  }\n\n  transitionTo(path) {\n    //this.context.history.pushState(null, path);\n    this.props.history.push(path);\n  }\n\n  routeToMain() {\n    this.transitionTo('/');\n  }\n\n  render() {\n    return React.createElement(VoteComposer, {\n      active: true,\n      onDeactivate: this.routeToMain,\n      onSave: this.addVote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    });\n  }\n\n}\n/*\r\nVoteComposerController.contextTypes = {\r\n        history: PropTypes.object.isRequired\r\n};\r\n*/","map":{"version":3,"sources":["C:\\Users\\gaeby\\Desktop\\Robotik\\Tutorials\\React\\testfield-vote-example\\express-ssr\\vote-ssr-react\\src\\components\\VoteComposerController.js"],"names":["React","VoteComposer","sendJson","PropTypes","VoteComposerController","Component","constructor","routeToMain","bind","addVote","componentDidMount","document","title","newVote","then","transitionTo","path","props","history","push","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAAQC,QAAR,QAAuB,oBAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,eAAe,MAAMC,sBAAN,SAAqCJ,KAAK,CAACK,SAA3C,CAAqD;AAChEC,EAAAA,WAAW,GAAG;AACV;AAEA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaD,IAAb,CAAkB,IAAlB,CAAf;AACH;;AAEDE,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,QAAQ,CAACC,KAAT,GAAiB,6BAAjB;AACH;;AAEDH,EAAAA,OAAO,CAACI,OAAD,EAAU;AACbX,IAAAA,QAAQ,CAAC,MAAD,uBAAuBW,OAAvB,GAAkCA,OAAlC,CAAR,CAAmDC,IAAnD,CAAwD,MAAM,KAAKP,WAAL,EAA9D;AACH;;AAEDQ,EAAAA,YAAY,CAACC,IAAD,EAAO;AACf;AACA,SAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwBH,IAAxB;AACH;;AAEDT,EAAAA,WAAW,GAAG;AACV,SAAKQ,YAAL,CAAkB,GAAlB;AACH;;AAEDK,EAAAA,MAAM,GAAG;AACL,WACE,oBAAC,YAAD;AAAc,MAAA,MAAM,EAAE,IAAtB;AACc,MAAA,YAAY,EAAE,KAAKb,WADjC;AAEc,MAAA,MAAM,EAAE,KAAKE,OAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAKH;;AA/B+D;AAkCpE","sourcesContent":["import React from 'react';\r\nimport VoteComposer from './VoteComposer';\r\nimport {sendJson} from '../backend/Backend';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class VoteComposerController extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.routeToMain = this.routeToMain.bind(this);\r\n        this.addVote = this.addVote.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = 'Compose - Vote as a Service';\r\n    }\r\n\r\n    addVote(newVote) {\r\n        sendJson('post', `/api/votes/${newVote}`, newVote).then(() => this.routeToMain());\r\n    }\r\n\r\n    transitionTo(path) {\r\n        //this.context.history.pushState(null, path);\r\n        this.props.history.push(path);\r\n    }\r\n\r\n    routeToMain() {\r\n        this.transitionTo('/');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <VoteComposer active={true}\r\n                        onDeactivate={this.routeToMain}\r\n                        onSave={this.addVote} />\r\n        );\r\n    }\r\n}\r\n\r\n/*\r\nVoteComposerController.contextTypes = {\r\n        history: PropTypes.object.isRequired\r\n};\r\n*/"]},"metadata":{},"sourceType":"module"}