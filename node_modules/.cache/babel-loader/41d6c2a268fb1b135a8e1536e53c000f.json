{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaeby\\\\Desktop\\\\Robotik\\\\Tutorials\\\\React\\\\testfield-vote-example\\\\express-ssr\\\\vote-ssr-react\\\\src\\\\components\\\\LoginController.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { fakeAuth } from '../index';\nimport { Redirect } from \"react-router\";\nexport default class LoginController extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      loggedIn: false,\n      referrer: false\n    };\n    this.onChange = this.onChange.bind(this);\n    this.login = this.login.bind(this);\n    this.routeToMain = this.routeToMain.bind(this);\n    this.isValidEmail = this.isValidEmail.bind(this);\n  }\n\n  login() {\n    fakeAuth.authenticate(() => {\n      this.setState({\n        loggedIn: true,\n        referrer: true\n      });\n    });\n    this.redirect();\n  }\n\n  redirect() {\n    const destination = \"/\".concat(this.props.match.params.redirect ? this.props.match.params.redirect : ''); //this.context.history.replace(null, destination);\n\n    this.props.history.replace('/compose');\n  }\n\n  onChange(event) {\n    const email = event.target.value;\n    this.setState({\n      email\n    });\n  }\n\n  routeToMain() {\n    //this.context.history.pushState(null, '/');\n    this.props.history.push('/');\n  }\n\n  isValidEmail() {\n    return this.state.email;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Row VotesRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"You need to login to perform that action\")), React.createElement(\"div\", {\n      className: \"LoginForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter your email address here\",\n      value: this.state.email,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ButtonBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: this.isValidEmail() ? 'Button' : 'Button disabled',\n      onClick: this.isValidEmail() ? this.login : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"button\", {\n      className: \"Button\",\n      onClick: this.routeToMain,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Cancel\"))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\gaeby\\Desktop\\Robotik\\Tutorials\\React\\testfield-vote-example\\express-ssr\\vote-ssr-react\\src\\components\\LoginController.js"],"names":["React","PropTypes","fakeAuth","Redirect","LoginController","Component","constructor","props","state","email","loggedIn","referrer","onChange","bind","login","routeToMain","isValidEmail","authenticate","setState","redirect","destination","match","params","history","replace","event","target","value","push","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { fakeAuth } from '../index';\r\nimport {Redirect} from \"react-router\";\r\n\r\n\r\nexport default class LoginController extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: '',\r\n            loggedIn: false,\r\n            referrer: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.login = this.login.bind(this);\r\n        this.routeToMain = this.routeToMain.bind(this);\r\n        this.isValidEmail = this.isValidEmail.bind(this);\r\n    }\r\n\r\n    login() {\r\n        fakeAuth.authenticate(() => {\r\n            this.setState({\r\n                loggedIn: true,\r\n                referrer: true\r\n            });\r\n        });\r\n        this.redirect();\r\n    }\r\n\r\n    redirect() {\r\n        const destination = `/${this.props.match.params.redirect ? this.props.match.params.redirect : ''}`;\r\n        //this.context.history.replace(null, destination);\r\n        this.props.history.replace('/compose');\r\n\r\n    }\r\n\r\n    onChange(event) {\r\n        const email = event.target.value;\r\n        this.setState({\r\n            email\r\n        });\r\n    }\r\n\r\n    routeToMain() {\r\n        //this.context.history.pushState(null, '/');\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    isValidEmail() {\r\n        return this.state.email;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Row VotesRow\">\r\n                <div className=\"Head\">\r\n                    <h1 className=\"Title\">\r\n                        You need to login to perform that action\r\n                    </h1>\r\n                </div>\r\n\r\n                <div className=\"LoginForm\">\r\n                    <input type=\"text\"\r\n                           placeholder=\"Enter your email address here\"\r\n                           value={this.state.email}\r\n                           onChange={this.onChange}\r\n                           />\r\n                    <div className=\"ButtonBar\">\r\n                        <button className={this.isValidEmail() ? 'Button' : 'Button disabled'}\r\n                           onClick={this.isValidEmail() ? this.login : null}>Login</button>\r\n                        <button className=\"Button\" onClick={this.routeToMain}>Cancel</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}